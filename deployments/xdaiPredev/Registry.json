{
  "address": "0xfDa59763de6F9EEd1fdC34190eADa3cf9eA2699F",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "factoryContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseBattleDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "buildingName",
          "type": "string"
        }
      ],
      "name": "getBasicProductionBuildingCoefficient",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBattleDurationStunMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBattleLobbyDurationPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBuildingTokenTransferThresholdPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBuildings",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCultistUnitType",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCultistsNoDestructionDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCultistsPerZoneMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCultistsSummonDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDemilitarizationCooldown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGameResources",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "worldResourceName",
              "type": "string"
            }
          ],
          "internalType": "struct IRegistry.GameResource[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGameUnits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "worldUnitName",
              "type": "string"
            }
          ],
          "internalType": "struct IRegistry.GameUnit[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGlobalMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxCultistsPerZone",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxSettlementPerZone",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMovementDurationStunMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNewSettlementExtraResources",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "resourceName",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRegistry.ExtraResource[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNewSettlementStartingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProductionTicksInSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "unitType",
          "type": "string"
        }
      ],
      "name": "getProsperityForDemilitarization",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "resourceName",
          "type": "string"
        }
      ],
      "name": "getResourceWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResources",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRobberyFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "resourceName",
          "type": "string"
        }
      ],
      "name": "getSiegePointsToResourceMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSiegePowerToSiegePointsMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToTreasuryPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "resourceName",
          "type": "string"
        }
      ],
      "name": "getToxicityByResource",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnitHiringFortHpMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "unitType",
          "type": "string"
        }
      ],
      "name": "getUnitMaxFoodToSpendOnMove",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "unitType",
          "type": "string"
        }
      ],
      "name": "getUnitPriceDropByUnitType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnits",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "buildingName",
          "type": "string"
        }
      ],
      "name": "getWorkerCapacityCoefficient",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "buildingName",
          "type": "string"
        }
      ],
      "name": "hasStartingTreasury",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_globalMultiplier",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_settlementStartingPrice",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isFactoryContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mightyCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "scriptContracts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setFactoryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "groupName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "setScriptContractName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "unitName",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "weaponPowerStage1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "armourPowerStage1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "weaponPowerStage2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "armourPowerStage2",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "siegePower",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "siegeMaxSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "siegeSupport",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRegistry.UnitStats",
          "name": "_unitStats",
          "type": "tuple"
        }
      ],
      "name": "setUnitStats",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settlementStartingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "unitsStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "weaponPowerStage1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "armourPowerStage1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "weaponPowerStage2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "armourPowerStage2",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "siegePower",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "siegeMaxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "siegeSupport",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x726b3cb4f1726828685f360faf00ac02bdd7a616cf3bffefe83fd081b4737476",
  "receipt": {
    "to": null,
    "from": "0xA2F2078006658594Fa058Ee8dBD08f3AA2Bb6C9c",
    "contractAddress": "0xfDa59763de6F9EEd1fdC34190eADa3cf9eA2699F",
    "transactionIndex": 1,
    "gasUsed": "2034617",
    "logsBloom": "0x
    "blockHash": "0xf310592ae280dd2d604989ee686d8a21bbae43634322d293b1a982dd1236d46d",
    "transactionHash": "0x726b3cb4f1726828685f360faf00ac02bdd7a616cf3bffefe83fd081b4737476",
    "logs": [],
    "blockNumber": 27259748,
    "cumulativeGasUsed": "2055617",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ce67aa0965c465d95ce5795642cb6672",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"factoryContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseBattleDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"buildingName\",\"type\":\"string\"}],\"name\":\"getBasicProductionBuildingCoefficient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBattleDurationStunMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBattleLobbyDurationPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuildingTokenTransferThresholdPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuildings\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCultistUnitType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCultistsNoDestructionDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCultistsPerZoneMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCultistsSummonDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDemilitarizationCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameResources\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"worldResourceName\",\"type\":\"string\"}],\"internalType\":\"struct IRegistry.GameResource[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameUnits\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"worldUnitName\",\"type\":\"string\"}],\"internalType\":\"struct IRegistry.GameUnit[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxCultistsPerZone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaxSettlementPerZone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMovementDurationStunMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNewSettlementExtraResources\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"resourceName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct IRegistry.ExtraResource[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNewSettlementStartingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductionTicksInSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"unitType\",\"type\":\"string\"}],\"name\":\"getProsperityForDemilitarization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"resourceName\",\"type\":\"string\"}],\"name\":\"getResourceWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getResources\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRobberyFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"resourceName\",\"type\":\"string\"}],\"name\":\"getSiegePointsToResourceMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSiegePowerToSiegePointsMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToTreasuryPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"resourceName\",\"type\":\"string\"}],\"name\":\"getToxicityByResource\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnitHiringFortHpMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"unitType\",\"type\":\"string\"}],\"name\":\"getUnitMaxFoodToSpendOnMove\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"unitType\",\"type\":\"string\"}],\"name\":\"getUnitPriceDropByUnitType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnits\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"buildingName\",\"type\":\"string\"}],\"name\":\"getWorkerCapacityCoefficient\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"buildingName\",\"type\":\"string\"}],\"name\":\"hasStartingTreasury\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_globalMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_settlementStartingPrice\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isFactoryContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mightyCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"scriptContracts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setFactoryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"groupName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setScriptContractName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"unitName\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"weaponPowerStage1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"armourPowerStage1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weaponPowerStage2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"armourPowerStage2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"siegePower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"siegeMaxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"siegeSupport\",\"type\":\"uint256\"}],\"internalType\":\"struct IRegistry.UnitStats\",\"name\":\"_unitStats\",\"type\":\"tuple\"}],\"name\":\"setUnitStats\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settlementStartingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"unitsStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weaponPowerStage1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"armourPowerStage1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weaponPowerStage2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"armourPowerStage2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"siegePower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"siegeMaxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"siegeSupport\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getBaseBattleDuration()\":{\"details\":\"Used internally to determine how long battle will last\",\"returns\":{\"_0\":\"Base battle duration\"}},\"getBasicProductionBuildingCoefficient(string)\":{\"details\":\"used for internal calculation of production result\",\"params\":{\"buildingName\":\"Building type\"},\"returns\":{\"_0\":\"Basic production building coefficient\"}},\"getBattleDurationStunMultiplier()\":{\"details\":\"Used internally to determine how long stun will last after army lost battle\",\"returns\":{\"_0\":\"Battle duration stun multiplier\"}},\"getBattleLobbyDurationPercent()\":{\"details\":\"Used internally to determine how long lobby phase will last\",\"returns\":{\"_0\":\"Battle lobby phase duration percent\"}},\"getBuildingTokenTransferThresholdPercent()\":{\"details\":\"Used to determine is building token transfer allowed based on treasury percent\",\"returns\":{\"_0\":\"Building token transfer threshold percent\"}},\"getBuildings()\":{\"details\":\"Used internally to determine which buildings will be created on placing settlement\",\"returns\":{\"_0\":\"Buildings\"}},\"getCultistUnitType()\":{\"details\":\"Determines type of unit in cultists army\",\"returns\":{\"_0\":\"Cultists unit type\"}},\"getCultistsNoDestructionDelay()\":{\"details\":\"Used to determine if destruction is available or not\",\"returns\":{\"_0\":\"No destruction interval duration (in seconds)\"}},\"getCultistsPerZoneMultiplier()\":{\"details\":\"Used to determine amount of cultists that have to be present for world destruction\",\"returns\":{\"_0\":\"Value of cultists per zone\"}},\"getCultistsSummonDelay()\":{\"details\":\"Used to determine is cultists can be re-summoned\",\"returns\":{\"_0\":\"Cultists summon delay (in seconds)\"}},\"getDemilitarizationCooldown()\":{\"details\":\"Used for army demilitarization restriction\",\"returns\":{\"_0\":\"Demilitarization cooldown in seconds\"}},\"getGameResources()\":{\"details\":\"Used internally to determine upgrade costs and providing initial resources for settlement owner based on his tier\",\"params\":{\"resources\":\"Game resources\"}},\"getGameUnits()\":{\"details\":\"Used internally in many places where interaction with units is necessary\",\"returns\":{\"_0\":\"Game units\"}},\"getGlobalMultiplier()\":{\"details\":\"Used everywhere, where time is involved. Essentially determines game speed\",\"returns\":{\"_0\":\"Global multiplier\"}},\"getMaxCultistsPerZone()\":{\"details\":\"Used to determine how many cultists will be summoned\",\"returns\":{\"_0\":\"Maximum amount of cultists\"}},\"getMaxSettlementPerZone()\":{\"details\":\"Cultists does not count (so +1 with cultists)\",\"returns\":{\"_0\":\"Max settlement that can be placed in one zone\"}},\"getMovementDurationStunMultiplier()\":{\"details\":\"Used internally to determine how long stun will last after armies' movement\",\"returns\":{\"_0\":\"Movement duration stun multiplier\"}},\"getNewSettlementExtraResources()\":{\"details\":\"During settlement creation continent contract uses output from this function to determine how much extra resources to mint\",\"returns\":{\"_0\":\"Extra resources which will be minted to user when new settlement is placed\"}},\"getNewSettlementStartingPrice()\":{\"details\":\"Used to determine how much base price for first settlement will be\",\"returns\":{\"_0\":\"New settlement starting price\"}},\"getProductionTicksInSecond()\":{\"details\":\"Used for production calculation\",\"returns\":{\"_0\":\"Amount of production ticks\"}},\"getProsperityForDemilitarization(string)\":{\"details\":\"Used internally to calculate how much prosperity will be given\",\"returns\":{\"_0\":\"Prosperity amount per one unit (in 1e18 precision)\"}},\"getResourceWeight(string)\":{\"details\":\"Used for calculation how much prosperity will be produced by resource in treasury\",\"params\":{\"resourceName\":\"Resource name\"},\"returns\":{\"_0\":\"Resource weight (in 1e0 precision)\"}},\"getResources()\":{\"details\":\"Used internally to determine upgrade costs and providing initial resources for settlement owner based on his tier\",\"params\":{\"resources\":\"Game resources\"}},\"getRobberyFee()\":{\"details\":\"Used in determination how much of resource will be burned during robbery\",\"returns\":{\"_0\":\"Robbery fee (in 1e18 precision, where 1e18 is 100%)\"}},\"getSiegePointsToResourceMultiplier(string)\":{\"details\":\"Used in calculation how many resources can be exchanged for siege points\",\"params\":{\"resourceName\":\"Resource name\"},\"returns\":{\"_0\":\"Siege point multiplier (in 1e18 precision)\"}},\"getSiegePowerToSiegePointsMultiplier()\":{\"details\":\"Used for determination how much siege points will be given\",\"returns\":{\"_0\":\"Siege power to siege siege points multiplier (in 1e18 precision)\"}},\"getToTreasuryPercent()\":{\"details\":\"Determines how much of buildings production will go to treasury (if not full)\",\"params\":{\"toTreasuryPercent\":\"Production to treasury percent (in 1e18 precision, where 1e18 is 100%)\"}},\"getToxicityByResource(string)\":{\"details\":\"Used for minting/burning toxicity\",\"params\":{\"resourceName\":\"Resource name\"},\"returns\":{\"_0\":\"Amount of toxicity per 1 resource (both are in 1e18 precision)\"}},\"getUnitHiringFortHpMultiplier()\":{\"details\":\"Used to determine how much units in army can be presented based on its current fort hp and this parameter\",\"returns\":{\"_0\":\"Unit hiring fort hp multiplier\"}},\"getUnitMaxFoodToSpendOnMove(string)\":{\"details\":\"Used internally to calculate army's movement speed\",\"params\":{\"unitType\":\"Unit type\"},\"returns\":{\"_0\":\"Maximum amount of food to spend on move (in 1e18 precision)\"}},\"getUnitPriceDropByUnitType(string)\":{\"details\":\"Used for determination of current unit pool price\",\"params\":{\"unitType\":\"Unit type\"},\"returns\":{\"_0\":\"Numerator\",\"_1\":\"Denominator\"}},\"getUnits()\":{\"details\":\"Used internally in many places where interaction with units is necessary\",\"returns\":{\"_0\":\"Game units\"}},\"getWorkerCapacityCoefficient(string)\":{\"details\":\"Used for internal calculation of max workers for each building\",\"params\":{\"buildingName\":\"Building type\"},\"returns\":{\"_0\":\"Worker capacity coefficient\"}},\"hasStartingTreasury(string)\":{\"details\":\"Used for determination if treasury should be filled on settlement creation\",\"params\":{\"buildingName\":\"Building type\"},\"returns\":{\"_0\":\"If treasury should be filled\"}},\"init(uint256,uint256)\":{\"details\":\"Called by address which created current instance\",\"params\":{\"globalMultiplier\":\"Global multiplier\",\"settlementStartingPrice\":\"Settlement starting price\"}},\"setFactoryContract(bytes32,address)\":{\"details\":\"Even though function is opened, it can be called only by mightyCreator\",\"params\":{\"assetType\":\"Type of the asset\",\"factoryAddress\":\"Factory address\"}},\"setScriptContractName(string,string,address)\":{\"details\":\"Even though function is opened, it can be called only by mightyCreator\",\"params\":{\"assetGroup\":\"Asset group\",\"assetType\":\"Type of the asset\",\"implementationAddress\":\"Implementation address\"}},\"setUnitStats(string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"Even though function is opened, it can be called only by mightyCreator\",\"params\":{\"unitName\":\"Unit type\",\"unitStats\":\"Unit stats struct\"}}},\"stateVariables\":{\"factoryContracts\":{\"details\":\"Updated when #setFactoryContract is calledDuring new world asset creation process registry is asked for factory contract for exact world asset type, which will contain creation method for new world asset\"},\"globalMultiplier\":{\"details\":\"Immutable, initialized on the registry creation\"},\"isFactoryContract\":{\"details\":\"Updated when #setFactoryContract is called\"},\"mightyCreator\":{\"details\":\"Immutable, initialized on the registry creation\"},\"scriptContracts\":{\"details\":\"Updated when #setScriptContractName is calledEvery worlds assets implementation (code, not data) will be defined by value from this mapping\"},\"settlementStartingPrice\":{\"details\":\"Immutable, initialized on the registry creation\"},\"unitsStats\":{\"details\":\"Updated when #setUnitStats is called\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factoryContracts(bytes32)\":{\"notice\":\"Mapping containing factory contracts addresses by provided asset types\"},\"getBaseBattleDuration()\":{\"notice\":\"Returns base battle duration\"},\"getBasicProductionBuildingCoefficient(string)\":{\"notice\":\"Calculates basic production building coefficient\"},\"getBattleDurationStunMultiplier()\":{\"notice\":\"Returns battle duration stun multiplier\"},\"getBattleLobbyDurationPercent()\":{\"notice\":\"Returns battle lobby phase duration percent (in 1e18 precision)\"},\"getBuildingTokenTransferThresholdPercent()\":{\"notice\":\"Returns building token transfer threshold percent\"},\"getBuildings()\":{\"notice\":\"Returns game buildings\"},\"getCultistUnitType()\":{\"notice\":\"Returns unit type of cultists army\"},\"getCultistsNoDestructionDelay()\":{\"notice\":\"Returns interval duration where world is not destructible after recent cultists summon\"},\"getCultistsPerZoneMultiplier()\":{\"notice\":\"Returns value of cultists per zone which determines cultists threshold for world destruction\"},\"getCultistsSummonDelay()\":{\"notice\":\"Returns cultists summon delay\"},\"getDemilitarizationCooldown()\":{\"notice\":\"Returns army demilitarization cooldown in seconds\"},\"getGameResources()\":{\"notice\":\"Returns game resources\"},\"getGameUnits()\":{\"notice\":\"Returns game units\"},\"getGlobalMultiplier()\":{\"notice\":\"Returns global multiplier\"},\"getMaxCultistsPerZone()\":{\"notice\":\"Returns maximum amount of cultists that can be present in zone\"},\"getMaxSettlementPerZone()\":{\"notice\":\"Returns max settlement that can be placed in one zone\"},\"getMovementDurationStunMultiplier()\":{\"notice\":\"Returns movement duration stun multiplier\"},\"getNewSettlementExtraResources()\":{\"notice\":\"Returns extra resources which will be minted to user when new settlement is placed\"},\"getNewSettlementStartingPrice()\":{\"notice\":\"Returns new settlement starting price in settlements market\"},\"getProductionTicksInSecond()\":{\"notice\":\"Returns amount of production ticks\"},\"getProsperityForDemilitarization(string)\":{\"notice\":\"Returns how much prosperity will be given for provided unit type\"},\"getResourceWeight(string)\":{\"notice\":\"Calculates resource weight\"},\"getResources()\":{\"notice\":\"Returns game resources\"},\"getRobberyFee()\":{\"notice\":\"Returns robbery fee\"},\"getSiegePointsToResourceMultiplier(string)\":{\"notice\":\"Returns siege point multiplier by provided resource\"},\"getSiegePowerToSiegePointsMultiplier()\":{\"notice\":\"Returns siege power to siege siege points multiplier\"},\"getToTreasuryPercent()\":{\"notice\":\"Returns production to treasury percent\"},\"getToxicityByResource(string)\":{\"notice\":\"Calculates toxicity by resource ratio\"},\"getUnitHiringFortHpMultiplier()\":{\"notice\":\"Returns unit hiring fort hp multiplier\"},\"getUnitMaxFoodToSpendOnMove(string)\":{\"notice\":\"Returns how much food unit can take from treasury to increase its army movement speed\"},\"getUnitPriceDropByUnitType(string)\":{\"notice\":\"Returns unit pool price drop per second for provided unit type, provided as numerator and denominator\"},\"getUnits()\":{\"notice\":\"Returns game units\"},\"getWorkerCapacityCoefficient(string)\":{\"notice\":\"Calculates worker capacity coefficient for provided building type\"},\"globalMultiplier()\":{\"notice\":\"Global multiplier\"},\"hasStartingTreasury(string)\":{\"notice\":\"Calculates if provided building has starting treasury on creation\"},\"init(uint256,uint256)\":{\"notice\":\"Proxy initializer\"},\"isFactoryContract(address)\":{\"notice\":\"Mapping containing is provided address a factory contract or not\"},\"mightyCreator()\":{\"notice\":\"An address which can configure/reconfigure current game\"},\"scriptContracts(bytes32)\":{\"notice\":\"Mapping containing assets implementations addresses by provided asset types\"},\"setFactoryContract(bytes32,address)\":{\"notice\":\"Sets provided address as factory contract for provided asset type\"},\"setScriptContractName(string,string,address)\":{\"notice\":\"Sets provided address as implementation for provided asset group and asset type (for ex. group - \\\"settlement\\\", type - \\\"CULTISTS\\\")\"},\"setUnitStats(string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Sets units stats for provided unit type\"},\"settlementStartingPrice()\":{\"notice\":\"Settlement starting price\"},\"unitsStats(string)\":{\"notice\":\"Mapping containing units stats by provided unit types\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Registry.sol\":\"Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"contracts/core/IRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\n/// @title Registry interface\\r\\n/// @notice Functions related to current game configuration\\r\\ninterface IRegistry {\\r\\n    struct GameResource {\\r\\n        string tokenName;\\r\\n        string tokenSymbol;\\r\\n        string worldResourceName;\\r\\n    }\\r\\n\\r\\n    struct GameUnit {\\r\\n        string tokenName;\\r\\n        string tokenSymbol;\\r\\n        string worldUnitName;\\r\\n    }\\r\\n\\r\\n    struct ExtraResource {\\r\\n        string resourceName;\\r\\n        uint256 value;\\r\\n    }\\r\\n\\r\\n    struct UnitStats {\\r\\n        uint256 weaponPowerStage1;\\r\\n        uint256 armourPowerStage1;\\r\\n        uint256 weaponPowerStage2;\\r\\n        uint256 armourPowerStage2;\\r\\n        uint256 siegePower;\\r\\n        uint256 siegeMaxSupply;\\r\\n        uint256 siegeSupport;\\r\\n    }\\r\\n\\r\\n    // State variables\\r\\n\\r\\n    /// @notice An address which can configure/reconfigure current game\\r\\n    /// @dev Immutable, initialized on the registry creation\\r\\n    function mightyCreator() external view returns (address);\\r\\n\\r\\n    /// @notice Mapping containing is provided address a factory contract or not\\r\\n    /// @dev Updated when #setFactoryContract is called\\r\\n    function isFactoryContract(address factoryAddress) external view returns (bool);\\r\\n\\r\\n    /// @notice Mapping containing factory contracts addresses by provided asset types\\r\\n    /// @dev Updated when #setFactoryContract is called\\r\\n    /// @dev During new world asset creation process registry is asked for factory contract for exact world asset type, which will contain creation method for new world asset\\r\\n    function factoryContracts(bytes32 scriptId) external view returns (address);\\r\\n\\r\\n    /// @notice Mapping containing assets implementations addresses by provided asset types\\r\\n    /// @dev Updated when #setScriptContractName is called\\r\\n    /// @dev Every worlds assets implementation (code, not data) will be defined by value from this mapping\\r\\n    function scriptContracts(bytes32 scriptId) external view returns (address);\\r\\n\\r\\n    /// @notice Mapping containing units stats by provided unit types\\r\\n    /// @dev Updated when #setUnitStats is called\\r\\n    function unitsStats(string memory unitName)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256 weaponPowerStage1,\\r\\n            uint256 armourPowerStage1,\\r\\n            uint256 weaponPowerStage2,\\r\\n            uint256 armourPowerStage2,\\r\\n            uint256 siegePower,\\r\\n            uint256 siegeMaxSupply,\\r\\n            uint256 siegeSupport\\r\\n        );\\r\\n\\r\\n    /// @notice Global multiplier\\r\\n    /// @dev Immutable, initialized on the registry creation\\r\\n    function globalMultiplier() external view returns (uint256);\\r\\n\\r\\n    /// @notice Settlement starting price\\r\\n    /// @dev Immutable, initialized on the registry creation\\r\\n    function settlementStartingPrice() external view returns (uint256);\\r\\n\\r\\n    // Functions\\r\\n\\r\\n    /// @notice Proxy initializer\\r\\n    /// @dev Called by address which created current instance\\r\\n    /// @param globalMultiplier Global multiplier\\r\\n    /// @param settlementStartingPrice Settlement starting price\\r\\n    function init(\\r\\n        uint256 globalMultiplier,\\r\\n        uint256 settlementStartingPrice\\r\\n    ) external;\\r\\n\\r\\n    /// @notice Sets provided address as factory contract for provided asset type\\r\\n    /// @dev Even though function is opened, it can be called only by mightyCreator\\r\\n    /// @param assetType Type of the asset\\r\\n    /// @param factoryAddress Factory address\\r\\n    function setFactoryContract(bytes32 assetType, address factoryAddress) external;\\r\\n\\r\\n    /// @notice Sets provided address as implementation for provided asset group and asset type (for ex. group - \\\"settlement\\\", type - \\\"CULTISTS\\\")\\r\\n    /// @dev Even though function is opened, it can be called only by mightyCreator\\r\\n    /// @param assetGroup Asset group\\r\\n    /// @param assetType Type of the asset\\r\\n    /// @param implementationAddress Implementation address\\r\\n    function setScriptContractName(\\r\\n        string memory assetGroup,\\r\\n        string memory assetType,\\r\\n        address implementationAddress\\r\\n    ) external;\\r\\n\\r\\n    /// @notice Sets units stats for provided unit type\\r\\n    /// @dev Even though function is opened, it can be called only by mightyCreator\\r\\n    /// @param unitName Unit type\\r\\n    /// @param unitStats Unit stats struct\\r\\n    function setUnitStats(string calldata unitName, UnitStats memory unitStats) external;\\r\\n\\r\\n    /// @notice Calculates worker capacity coefficient for provided building type\\r\\n    /// @dev Used for internal calculation of max workers for each building\\r\\n    /// @param buildingName Building type\\r\\n    /// @return workerCapacityCoefficient Worker capacity coefficient\\r\\n    function getWorkerCapacityCoefficient(string memory buildingName) external pure returns (uint256 workerCapacityCoefficient);\\r\\n\\r\\n    /// @notice Calculates basic production building coefficient\\r\\n    /// @dev used for internal calculation of production result\\r\\n    /// @param buildingName Building type\\r\\n    /// @return basicProductionBuildingCoefficient Basic production building coefficient\\r\\n    function getBasicProductionBuildingCoefficient(string memory buildingName) external pure returns (uint256 basicProductionBuildingCoefficient);\\r\\n\\r\\n    /// @notice Calculates if provided building has starting treasury on creation\\r\\n    /// @dev Used for determination if treasury should be filled on settlement creation\\r\\n    /// @param buildingName Building type\\r\\n    /// @return hasStartingTreasury If treasury should be filled\\r\\n    function hasStartingTreasury(string memory buildingName) external pure returns (bool hasStartingTreasury);\\r\\n\\r\\n    /// @notice Calculates toxicity by resource ratio\\r\\n    /// @dev Used for minting/burning toxicity\\r\\n    /// @param resourceName Resource name\\r\\n    /// @return toxicity Amount of toxicity per 1 resource (both are in 1e18 precision)\\r\\n    function getToxicityByResource(string memory resourceName) external pure returns (uint256 toxicity);\\r\\n\\r\\n    /// @notice Calculates resource weight\\r\\n    /// @dev Used for calculation how much prosperity will be produced by resource in treasury\\r\\n    /// @param resourceName Resource name\\r\\n    /// @return resourceWeight Resource weight (in 1e0 precision)\\r\\n    function getResourceWeight(string memory resourceName) external pure returns (uint256 resourceWeight);\\r\\n\\r\\n    /// @notice Returns siege power to siege siege points multiplier\\r\\n    /// @dev Used for determination how much siege points will be given\\r\\n    /// @return siegePowerToSiegePointsMultiplier Siege power to siege siege points multiplier (in 1e18 precision)\\r\\n    function getSiegePowerToSiegePointsMultiplier() external pure returns (uint256 siegePowerToSiegePointsMultiplier);\\r\\n\\r\\n    /// @notice Returns siege point multiplier by provided resource\\r\\n    /// @dev Used in calculation how many resources can be exchanged for siege points\\r\\n    /// @param resourceName Resource name\\r\\n    /// @return siegePointsToResourceMultiplier Siege point multiplier (in 1e18 precision)\\r\\n    function getSiegePointsToResourceMultiplier(string memory resourceName) external view returns (uint256 siegePointsToResourceMultiplier);\\r\\n\\r\\n    /// @notice Returns robbery fee\\r\\n    /// @dev Used in determination how much of resource will be burned during robbery\\r\\n    /// @return robberyFee Robbery fee (in 1e18 precision, where 1e18 is 100%)\\r\\n    function getRobberyFee() external view returns (uint256 robberyFee);\\r\\n\\r\\n    /// @notice Returns global multiplier\\r\\n    /// @dev Used everywhere, where time is involved. Essentially determines game speed\\r\\n    /// @return globalMultiplier Global multiplier\\r\\n    function getGlobalMultiplier() external view returns (uint256 globalMultiplier);\\r\\n\\r\\n    /// @notice Returns production to treasury percent\\r\\n    /// @dev Determines how much of buildings production will go to treasury (if not full)\\r\\n    /// @param toTreasuryPercent Production to treasury percent (in 1e18 precision, where 1e18 is 100%)\\r\\n    function getToTreasuryPercent() external pure returns (uint256 toTreasuryPercent);\\r\\n\\r\\n    /// @notice Returns base battle duration\\r\\n    /// @dev Used internally to determine how long battle will last\\r\\n    /// @return baseBattleDuration Base battle duration\\r\\n    function getBaseBattleDuration() external view returns (uint256 baseBattleDuration);\\r\\n\\r\\n    /// @notice Returns battle lobby phase duration percent (in 1e18 precision)\\r\\n    /// @dev Used internally to determine how long lobby phase will last\\r\\n    /// @return battleLobbyDurationPercent Battle lobby phase duration percent\\r\\n    function getBattleLobbyDurationPercent() external view returns (uint256 battleLobbyDurationPercent);\\r\\n\\r\\n    /// @notice Returns battle duration stun multiplier\\r\\n    /// @dev Used internally to determine how long stun will last after army lost battle\\r\\n    /// @return battleDurationStunMultiplier Battle duration stun multiplier\\r\\n    function getBattleDurationStunMultiplier() external pure returns (uint256 battleDurationStunMultiplier);\\r\\n\\r\\n    /// @notice Returns movement duration stun multiplier\\r\\n    /// @dev Used internally to determine how long stun will last after armies' movement\\r\\n    /// @return movementDurationStunMultiplier Movement duration stun multiplier\\r\\n    function getMovementDurationStunMultiplier() external pure returns (uint256 movementDurationStunMultiplier);\\r\\n\\r\\n    /// @notice Returns game buildings\\r\\n    /// @dev Used internally to determine which buildings will be created on placing settlement\\r\\n    /// @return buildings Buildings\\r\\n    function getBuildings() external view returns (string[] memory buildings);\\r\\n\\r\\n    /// @notice Returns game resources\\r\\n    /// @dev Used internally to determine upgrade costs and providing initial resources for settlement owner based on his tier\\r\\n    /// @param resources Game resources\\r\\n    function getResources() external view returns (string[] memory resources);\\r\\n\\r\\n    /// @notice Returns game units\\r\\n    /// @dev Used internally in many places where interaction with units is necessary\\r\\n    /// @return units Game units\\r\\n    function getUnits() external view returns (string[] memory units);\\r\\n\\r\\n    /// @notice Returns game resources\\r\\n    /// @dev Used internally to determine upgrade costs and providing initial resources for settlement owner based on his tier\\r\\n    /// @param resources Game resources\\r\\n    function getGameResources() external view returns (GameResource[] memory resources);\\r\\n\\r\\n    /// @notice Returns game units\\r\\n    /// @dev Used internally in many places where interaction with units is necessary\\r\\n    /// @return units Game units\\r\\n    function getGameUnits() external view returns (GameUnit[] memory units);\\r\\n\\r\\n    /// @notice Returns unit hiring fort hp multiplier\\r\\n    /// @dev Used to determine how much units in army can be presented based on its current fort hp and this parameter\\r\\n    /// @return unitHiringFortHpMultiplier Unit hiring fort hp multiplier\\r\\n    function getUnitHiringFortHpMultiplier() external pure returns (uint256 unitHiringFortHpMultiplier);\\r\\n\\r\\n    /// @notice Returns how much food unit can take from treasury to increase its army movement speed\\r\\n    /// @dev Used internally to calculate army's movement speed\\r\\n    /// @param unitType Unit type\\r\\n    /// @return unitMaxFoodToSpendOnMove Maximum amount of food to spend on move (in 1e18 precision)\\r\\n    function getUnitMaxFoodToSpendOnMove(string memory unitType) external pure returns (uint256 unitMaxFoodToSpendOnMove);\\r\\n\\r\\n    /// @notice Returns how much prosperity will be given for provided unit type\\r\\n    /// @dev Used internally to calculate how much prosperity will be given\\r\\n    /// @return prosperityPerUnit Prosperity amount per one unit (in 1e18 precision)\\r\\n    function getProsperityForDemilitarization(string memory unitType) external pure returns (uint256 prosperityPerUnit);\\r\\n\\r\\n    /// @notice Returns cultists summon delay\\r\\n    /// @dev Used to determine is cultists can be re-summoned\\r\\n    /// @return cultistsSummonDelay Cultists summon delay (in seconds)\\r\\n    function getCultistsSummonDelay() external pure returns (uint256 cultistsSummonDelay);\\r\\n\\r\\n    /// @notice Returns max settlement that can be placed in one zone\\r\\n    /// @dev Cultists does not count (so +1 with cultists)\\r\\n    /// @return maxSettlementPerZone Max settlement that can be placed in one zone\\r\\n    function getMaxSettlementPerZone() external pure returns (uint256 maxSettlementPerZone);\\r\\n\\r\\n    /// @notice Returns interval duration where world is not destructible after recent cultists summon\\r\\n    /// @dev Used to determine if destruction is available or not\\r\\n    /// @return cultistsNoDestructionDelay No destruction interval duration (in seconds)\\r\\n    function getCultistsNoDestructionDelay() external pure returns (uint256 cultistsNoDestructionDelay);\\r\\n\\r\\n    /// @notice Returns value of cultists per zone which determines cultists threshold for world destruction\\r\\n    /// @dev Used to determine amount of cultists that have to be present for world destruction\\r\\n    /// @return cultistsPerZoneMultiplier Value of cultists per zone\\r\\n    function getCultistsPerZoneMultiplier() external pure returns (uint256 cultistsPerZoneMultiplier);\\r\\n\\r\\n    /// @notice Returns maximum amount of cultists that can be present in zone\\r\\n    /// @dev Used to determine how many cultists will be summoned\\r\\n    /// @return maxCultistsPerZone Maximum amount of cultists\\r\\n    function getMaxCultistsPerZone() external pure returns (uint256 maxCultistsPerZone);\\r\\n\\r\\n    /// @notice Returns unit type of cultists army\\r\\n    /// @dev Determines type of unit in cultists army\\r\\n    /// @return cultistUnitType Cultists unit type\\r\\n    function getCultistUnitType() external pure returns (string memory cultistUnitType);\\r\\n\\r\\n    /// @notice Returns building token transfer threshold percent\\r\\n    /// @dev Used to determine is building token transfer allowed based on treasury percent\\r\\n    /// @return buildingTokenTransferThresholdPercent Building token transfer threshold percent\\r\\n    function getBuildingTokenTransferThresholdPercent() external pure returns (uint256 buildingTokenTransferThresholdPercent);\\r\\n\\r\\n    /// @notice Returns extra resources which will be minted to user when new settlement is placed\\r\\n    /// @dev During settlement creation continent contract uses output from this function to determine how much extra resources to mint\\r\\n    /// @return extraResources Extra resources which will be minted to user when new settlement is placed\\r\\n    function getNewSettlementExtraResources() external view returns (ExtraResource[] memory extraResources);\\r\\n\\r\\n    /// @notice Returns new settlement starting price in settlements market\\r\\n    /// @dev Used to determine how much base price for first settlement will be\\r\\n    /// @return newSettlementStartingPrice New settlement starting price\\r\\n    function getNewSettlementStartingPrice() external view returns (uint256 newSettlementStartingPrice);\\r\\n\\r\\n    /// @notice Returns amount of production ticks\\r\\n    /// @dev Used for production calculation\\r\\n    /// @return ticks Amount of production ticks\\r\\n    function getProductionTicksInSecond() external view returns (uint256 ticks);\\r\\n\\r\\n    /// @notice Returns army demilitarization cooldown in seconds\\r\\n    /// @dev Used for army demilitarization restriction\\r\\n    /// @return cooldown Demilitarization cooldown in seconds\\r\\n    function getDemilitarizationCooldown() external pure returns (uint256 cooldown);\\r\\n\\r\\n    /// @notice Returns unit pool price drop per second for provided unit type, provided as numerator and denominator\\r\\n    /// @dev Used for determination of current unit pool price\\r\\n    /// @param unitType Unit type\\r\\n    /// @return numerator Numerator\\r\\n    /// @return denominator Denominator\\r\\n    function getUnitPriceDropByUnitType(string memory unitType) external pure returns (uint256 numerator, uint256 denominator);\\r\\n}\\r\\n\",\"keccak256\":\"0x54233674bfb0a49a9cb1dec6e736df9d0248a16a5b7f72a139ef850d9833122f\",\"license\":\"MIT\"},\"contracts/core/Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.13;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\r\\nimport \\\"./IRegistry.sol\\\";\\r\\n\\r\\ncontract Registry is IRegistry, Initializable {\\r\\n    /// @inheritdoc IRegistry\\r\\n    address public override mightyCreator;\\r\\n    /// @inheritdoc IRegistry\\r\\n    mapping(address => bool) public override isFactoryContract;\\r\\n    /// @inheritdoc IRegistry\\r\\n    mapping(bytes32 => address) public override factoryContracts;\\r\\n    /// @inheritdoc IRegistry\\r\\n    mapping(bytes32 => address) public override scriptContracts;\\r\\n    /// @inheritdoc IRegistry\\r\\n    mapping(string => UnitStats) public override unitsStats;\\r\\n    /// @inheritdoc IRegistry\\r\\n    uint256 public override globalMultiplier;\\r\\n    /// @inheritdoc IRegistry\\r\\n    uint256 public override settlementStartingPrice;\\r\\n\\r\\n    /// @dev Allows caller to be only mighty creator\\r\\n    modifier onlyMightyCreator() {\\r\\n        require(msg.sender == mightyCreator, \\\"onlyMightyCreator\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function init(\\r\\n        uint256 _globalMultiplier,\\r\\n        uint256 _settlementStartingPrice\\r\\n    ) public override initializer {\\r\\n        mightyCreator = msg.sender;\\r\\n        globalMultiplier = _globalMultiplier;\\r\\n        settlementStartingPrice = _settlementStartingPrice;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function setFactoryContract(bytes32 id, address addr) public override onlyMightyCreator {\\r\\n        factoryContracts[id] = addr;\\r\\n        isFactoryContract[addr] = true;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function setScriptContractName(\\r\\n        string memory groupName,\\r\\n        string memory name,\\r\\n        address addr\\r\\n    ) public override onlyMightyCreator {\\r\\n        scriptContracts[keccak256(abi.encodePacked(groupName, name))] = addr;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function setUnitStats(string calldata unitName, UnitStats memory _unitStats) public override onlyMightyCreator {\\r\\n        unitsStats[unitName] = _unitStats;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getGlobalMultiplier() public view override returns (uint256) {\\r\\n        return globalMultiplier;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getSiegePowerToSiegePointsMultiplier() public pure override returns (uint256) {\\r\\n        return 5e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getSiegePointsToResourceMultiplier(string memory resourceName) public view override returns (uint256) {\\r\\n        bytes32 resourceId = keccak256(bytes(resourceName));\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"FOOD\\\"))) {\\r\\n            return 1e18;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"WOOD\\\"))) {\\r\\n            return 1e18;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"ORE\\\"))) {\\r\\n            return 1e18;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"WEAPON\\\"))) {\\r\\n            return 1e18;\\r\\n        }\\r\\n\\r\\n        revert(\\\"unknown resource\\\");\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getWorkerCapacityCoefficient(string memory buildingName) public pure override returns (uint256) {\\r\\n        bytes32 buildingId = keccak256(bytes(buildingName));\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"FARM\\\"))) {\\r\\n            return 10e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"LUMBERMILL\\\"))) {\\r\\n            return 7e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"MINE\\\"))) {\\r\\n            return 5e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"SMITHY\\\"))) {\\r\\n            return 3e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"FORT\\\"))) {\\r\\n            return 5e18;\\r\\n        }\\r\\n\\r\\n        revert(\\\"unknown building\\\");\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getBasicProductionBuildingCoefficient(string memory buildingName) public pure override returns (uint256) {\\r\\n        bytes32 buildingId = keccak256(bytes(buildingName));\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"FARM\\\"))) {\\r\\n            return 0.5e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"LUMBERMILL\\\"))) {\\r\\n            return 0.35e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"MINE\\\"))) {\\r\\n            return 0.25e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"SMITHY\\\"))) {\\r\\n            return 0.2e18;\\r\\n        }\\r\\n\\r\\n        if (buildingId == keccak256(bytes(\\\"FORT\\\"))) {\\r\\n            return 0.2e18;\\r\\n        }\\r\\n\\r\\n        revert(\\\"unknown building\\\");\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function hasStartingTreasury(string memory buildingName) public pure override returns (bool) {\\r\\n//        bytes32 buildingId = keccak256(bytes(buildingName));\\r\\n//        if (buildingId == keccak256(bytes(\\\"LUMBERMILL\\\"))) {\\r\\n//            return true;\\r\\n//        }\\r\\n\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getToxicityByResource(string memory resourceName) public pure override returns (uint256) {\\r\\n        bytes32 resourceId = keccak256(bytes(resourceName));\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"FOOD\\\"))) {\\r\\n            return 1e18;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"WOOD\\\"))) {\\r\\n            return 2e18;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"ORE\\\"))) {\\r\\n            return 4e18;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"WEAPON\\\"))) {\\r\\n            return 8e18;\\r\\n        }\\r\\n\\r\\n        revert(\\\"unknown resource\\\");\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getResourceWeight(string memory resourceName) public pure override returns (uint256) {\\r\\n        bytes32 resourceId = keccak256(bytes(resourceName));\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"FOOD\\\"))) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"WOOD\\\"))) {\\r\\n            return 1;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"ORE\\\"))) {\\r\\n            return 2;\\r\\n        }\\r\\n\\r\\n        if (resourceId == keccak256(bytes(\\\"WEAPON\\\"))) {\\r\\n            return 3;\\r\\n        }\\r\\n\\r\\n        return 0;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getRobberyFee() public view override returns (uint256) {\\r\\n        return 0.3e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getToTreasuryPercent() public pure override returns (uint256) {\\r\\n        return 0.9e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getBaseBattleDuration() public pure override returns (uint256) {\\r\\n        return 24 hours;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getBattleLobbyDurationPercent() public pure override returns (uint256) {\\r\\n        return 0.75e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getBattleDurationStunMultiplier() public pure override returns (uint256) {\\r\\n        return 0.25e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getMovementDurationStunMultiplier() public pure override returns (uint256) {\\r\\n        return 0.6e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getBuildings() public pure override returns (string[] memory) {\\r\\n        string[] memory buildings = new string[](5);\\r\\n\\r\\n        buildings[0] = \\\"FARM\\\";\\r\\n        buildings[1] = \\\"LUMBERMILL\\\";\\r\\n        buildings[2] = \\\"MINE\\\";\\r\\n        buildings[3] = \\\"SMITHY\\\";\\r\\n        buildings[4] = \\\"FORT\\\";\\r\\n\\r\\n        return buildings;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getGameResources() public pure override returns (GameResource[] memory) {\\r\\n        GameResource[] memory resources = new GameResource[](4);\\r\\n\\r\\n        resources[0] = GameResource(\\\"Mithraeum Food\\\", \\\"mFOOD\\\", \\\"FOOD\\\");\\r\\n        resources[1] = GameResource(\\\"Mithraeum Wood\\\", \\\"mWOOD\\\", \\\"WOOD\\\");\\r\\n        resources[2] = GameResource(\\\"Mithraeum Ore\\\", \\\"mORE\\\", \\\"ORE\\\");\\r\\n        resources[3] = GameResource(\\\"Mithraeum Weapon\\\", \\\"mWEAPON\\\", \\\"WEAPON\\\");\\r\\n\\r\\n        return resources;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getGameUnits() public pure override returns (GameUnit[] memory) {\\r\\n        GameUnit[] memory units = new GameUnit[](3);\\r\\n\\r\\n        units[0] = GameUnit(\\\"Mithraeum Warrior\\\", \\\"mWARRIOR\\\", \\\"WARRIOR\\\");\\r\\n        units[1] = GameUnit(\\\"Mithraeum Archer\\\", \\\"mARCHER\\\", \\\"ARCHER\\\");\\r\\n        units[2] = GameUnit(\\\"Mithraeum Horseman\\\", \\\"mHORSEMAN\\\", \\\"HORSEMAN\\\");\\r\\n\\r\\n        return units;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getResources() public pure override returns (string[] memory) {\\r\\n        string[] memory resources = new string[](4);\\r\\n\\r\\n        resources[0] = \\\"FOOD\\\";\\r\\n        resources[1] = \\\"WOOD\\\";\\r\\n        resources[2] = \\\"ORE\\\";\\r\\n        resources[3] = \\\"WEAPON\\\";\\r\\n\\r\\n        return resources;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getUnits() public pure override returns (string[] memory) {\\r\\n        string[] memory units = new string[](3);\\r\\n\\r\\n        units[0] = \\\"WARRIOR\\\";\\r\\n        units[1] = \\\"ARCHER\\\";\\r\\n        units[2] = \\\"HORSEMAN\\\";\\r\\n\\r\\n        return units;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getUnitHiringFortHpMultiplier() public pure override returns (uint256) {\\r\\n        return 1;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getUnitMaxFoodToSpendOnMove(string memory unitType) public pure override returns (uint256) {\\r\\n        bytes32 unitId = keccak256(bytes(unitType));\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"WARRIOR\\\"))) {\\r\\n            return 1e18;\\r\\n        }\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"ARCHER\\\"))) {\\r\\n            return 0.25e18;\\r\\n        }\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"HORSEMAN\\\"))) {\\r\\n            return 0.1e18;\\r\\n        }\\r\\n\\r\\n        revert(\\\"unknown unit\\\");\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getProsperityForDemilitarization(string memory unitType) public pure override returns (uint256) {\\r\\n        bytes32 unitId = keccak256(bytes(unitType));\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"WARRIOR\\\"))) {\\r\\n            return 2e18;\\r\\n        }\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"ARCHER\\\"))) {\\r\\n            return 3e18;\\r\\n        }\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"HORSEMAN\\\"))) {\\r\\n            return 4e18;\\r\\n        }\\r\\n\\r\\n        revert(\\\"unknown unit\\\");\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getCultistsSummonDelay() public pure override returns (uint256) {\\r\\n        return 2 weeks;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getMaxSettlementPerZone() public pure override returns (uint256) {\\r\\n        return 40;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getCultistsNoDestructionDelay() public pure override returns (uint256) {\\r\\n        return 10 days;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getCultistsPerZoneMultiplier() public pure override returns (uint256) {\\r\\n        return 5000e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getMaxCultistsPerZone() public pure override returns (uint256) {\\r\\n        return 10000e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getCultistUnitType() public pure override returns (string memory) {\\r\\n        return \\\"WARRIOR\\\";\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getBuildingTokenTransferThresholdPercent() public pure override returns (uint256) {\\r\\n        return 0.3e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getNewSettlementExtraResources() public view override returns (ExtraResource[] memory) {\\r\\n        ExtraResource[] memory extraResources = new ExtraResource[](0);\\r\\n//        ExtraResource[] memory extraResources = new ExtraResource[](2);\\r\\n//        extraResources[0] = ExtraResource(\\\"WOOD\\\", 5e18);\\r\\n//        extraResources[1] = ExtraResource(\\\"ORE\\\", 5e18);\\r\\n        return extraResources;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getNewSettlementStartingPrice() public view override returns (uint256) {\\r\\n        return settlementStartingPrice;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getProductionTicksInSecond() public view override returns (uint256) {\\r\\n        return getMaxCultistsPerZone() / 1e18;\\r\\n    }\\r\\n\\r\\n    /// @inheritdoc IRegistry\\r\\n    function getDemilitarizationCooldown() public pure override returns (uint256) {\\r\\n        return 2 days;\\r\\n    }\\r\\n\\r\\n    function getUnitPriceDropByUnitType(string memory unitType) public pure override returns (uint256, uint256) {\\r\\n        bytes32 unitId = keccak256(bytes(unitType));\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"WARRIOR\\\"))) {\\r\\n            return (9999966703519269, 10000000000000000);\\r\\n        }\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"ARCHER\\\"))) {\\r\\n            return (9999974173233430, 10000000000000000);\\r\\n        }\\r\\n\\r\\n        if (unitId == keccak256(bytes(\\\"HORSEMAN\\\"))) {\\r\\n            return (9999981189956406, 10000000000000000);\\r\\n        }\\r\\n\\r\\n        revert(\\\"unknown unit\\\");\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf3aef8be9a049d74c02840204820ca725ded61a4f47896a390c6d4f0261cb615\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506123d7806100206000396000f3fe608060405234801561001057600080fd5b50600436106102cf5760003560e01c806377641f071161018c578063c7388af4116100ee578063f515741311610097578063fcc77f3b11610071578063fcc77f3b14610672578063fe9135f014610685578063ff614f4f1461068e57600080fd5b8063f515741314610631578063f57333f71461063a578063f8c73bd31461064a57600080fd5b8063dc488ad6116100c8578063dc488ad6146105eb578063dd77e3c71461060e578063e7cb9a871461062157600080fd5b8063c7388af41461054d578063cf0c501714610555578063d9cf6a26146105e357600080fd5b8063a5843f0811610150578063b5b41bb61161012a578063b5b41bb614610533578063beaa602d1461053c578063c1cc57b01461054557600080fd5b8063a5843f08146104f0578063a6896cdb14610503578063b22f0c781461050a57600080fd5b806377641f07146104b2578063781e0efe146104c55780637f0c0b7d146104cd578063a0184996146104e0578063a53a3bb7146104e757600080fd5b8063355bb529116102355780635b33550a116101f957806368e35ca0116101d357806368e35ca0146103cf578063699324ae1461047b5780636f3426da146104a457600080fd5b80635b33550a1461043c578063636d68541461044f578063657f17fd1461047357600080fd5b8063355bb529146103cf5780634161d4ec146103dd578063426851b9146103f0578063493d458f1461040557806350b345b51461041357600080fd5b80631547440811610297578063265d3f5011610271578063265d3f5014610378578063267a02bf1461038b578063271530501461039e57600080fd5b806315474408146103425780631dae215214610350578063253a1eac1461036557600080fd5b8063023da674146102d4578063027aa9f5146102e9578063051d8db61461030757806309f04f1c1461031f5780631245cbee1461032d575b600080fd5b6102e76102e2366004611e15565b610697565b005b6102f1610743565b6040516102fe9190611e91565b60405180910390f35b674563918244f400005b6040519081526020016102fe565b6703782dace9d90000610311565b610335610835565b6040516102fe9190611ef3565b670a688906bd8b0000610311565b61035861087e565b6040516102fe9190611fba565b6103116103733660046120db565b610b2b565b6103116103863660046120db565b610cc1565b6103116103993660046120db565b610eb1565b6000546103b7906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016102fe565b670429d069189e0000610311565b6103116103eb3660046120db565b610ff8565b6103f8611108565b6040516102fe9190612118565b670853a0d2313c0000610311565b6103b761042136600461216d565b6002602052600090815260409020546001600160a01b031681565b61031161044a3660046120db565b611335565b61046361045d3660046120db565b50600090565b60405190151581526020016102fe565b610311611490565b6103b761048936600461216d565b6003602052600090815260409020546001600160a01b031681565b670c7d713b49da0000610311565b6103116104c03660046120db565b6114b3565b600554610311565b6102e76104db366004612186565b6115fb565b6028610311565b62127500610311565b6102e76104fe36600461225f565b6116b7565b6001610311565b60408051808201825260078152662ba0a92924a7a960c91b602082015290516102fe9190612281565b6202a300610311565b61031160055481565b6102f16117f2565b600654610311565b6105ae6105633660046120db565b80516020818301810180516004808352938301929094019190912092905281546001830154600284015460038501549385015460058601546006909601549395929491939192909187565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016102fe565b6102f1611907565b6104636105f936600461229b565b60016020526000908152604090205460ff1681565b61031161061c3660046120db565b611a5e565b69010f0cf064dd59200000610311565b620d2f00610311565b69021e19e0c9bab2400000610311565b61065d6106583660046120db565b611c13565b604080519283526020830191909152016102fe565b6102e76106803660046122b6565b611d40565b62015180610311565b61031160065481565b6000546201000090046001600160a01b031633146106f05760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b60448201526064015b60405180910390fd5b600091825260026020908152604080842080546001600160a01b0390941673ffffffffffffffffffffffffffffffffffffffff19909416841790559183526001908190529120805460ff19169091179055565b6040805160038082526080820190925260609160009190816020015b606081526020019060019003908161075f579050509050604051806040016040528060078152602001662ba0a92924a7a960c91b815250816000815181106107a9576107a961232a565b60200260200101819052506040518060400160405280600681526020016520a921a422a960d11b815250816001815181106107e6576107e661232a565b6020026020010181905250604051806040016040528060088152602001672427a929a2a6a0a760c11b815250816002815181106108255761082561232a565b6020908102919091010152919050565b604080516000808252602082019092526060919081610877565b60408051808201909152606081526000602082015281526020019060019003908161084f5790505b5092915050565b60408051600480825260a0820190925260609160009190816020015b6108be60405180606001604052806060815260200160608152602001606081525090565b81526020019060019003908161089a57905050905060405180606001604052806040518060400160405280600e81526020016d135a5d1a1c98595d5b48119bdbd960921b8152508152602001604051806040016040528060058152602001641b5193d3d160da1b8152508152602001604051806040016040528060048152602001631193d3d160e21b815250815250816000815181106109605761096061232a565b602002602001018190525060405180606001604052806040518060400160405280600e81526020016d135a5d1a1c98595d5b4815dbdbd960921b8152508152602001604051806040016040528060058152602001641b55d3d3d160da1b81525081526020016040518060400160405280600481526020016315d3d3d160e21b815250815250816001815181106109f8576109f861232a565b602002602001018190525060405180606001604052806040518060400160405280600d81526020016c4d697468726165756d204f726560981b8152508152602001604051806040016040528060048152602001636d4f524560e01b8152508152602001604051806040016040528060038152602001624f524560e81b81525081525081600281518110610a8d57610a8d61232a565b602002602001018190525060405180606001604052806040518060400160405280601081526020016f26b4ba343930b2bab6902bb2b0b837b760811b81525081526020016040518060400160405280600781526020016636aba2a0a827a760c91b8152508152602001604051806040016040528060068152602001652ba2a0a827a760d11b815250815250816003815181106108255761082561232a565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c38101610b8c5750670de0b6b3a764000092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be8101610bdf5750671bc16d674ec8000092915050565b6040805180820190915260038152624f524560e81b6020909101527f624ae31110c92d70b58ec456bb42524ff16773a98936d8ef150f1e6b104b34ab8101610c315750673782dace9d90000092915050565b6040805180820190915260068152652ba2a0a827a760d11b6020909101527fbbbd9ae5a4e104776c954879199abf8e14ebd8b157cc822605c7a65f61d37d648101610c865750676f05b59d3b20000092915050565b60405162461bcd60e51b815260206004820152601060248201526f756e6b6e6f776e207265736f7572636560801b60448201526064016106e7565b80516020808301919091206040805180820190915260048152634641524d60e01b9201919091526000907fea182adbe8a99c0376d68ae8663b1e572fb013df4142853d0efacd6d83e4a3f38101610d225750678ac7230489e8000092915050565b60408051808201909152600a8152691315535091549352531360b21b6020909101527f9105c25cd4a4f5de306390a4361214e261c5b47733a14849b60e1afd6befe9a78101610d7b5750676124fee993bc000092915050565b6040805180820190915260048152634d494e4560e01b6020909101527fba703fbcaf9339015e918255c7c6fb66106877b9277228701a99875362186bbc8101610dce5750674563918244f4000092915050565b604080518082019091526006815265534d4954485960d01b6020909101527f172dd3f67874f5199aae0df823a0dbc7dc361e67643d2a2054a704e56cc7902e8101610e2357506729a2241af62c000092915050565b6040805180820190915260048152631193d49560e21b6020909101527fd6ee2a35c7750db1280c6e5b14dbb9643f0276ca328c44ef8a35818fd5bd14e78101610e765750674563918244f4000092915050565b60405162461bcd60e51b815260206004820152601060248201526f756e6b6e6f776e206275696c64696e6760801b60448201526064016106e7565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b9201919091526000907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f8101610f155750670de0b6b3a764000092915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c08101610f6a57506703782dace9d9000092915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610fc1575067016345785d8a000092915050565b60405162461bcd60e51b815260206004820152600c60248201526b1d5b9adb9bdddb881d5b9a5d60a21b60448201526064016106e7565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b9201919091526000907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f810161105c5750671bc16d674ec8000092915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c081016110b157506729a2241af62c000092915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610fc15750673782dace9d90000092915050565b6040805160038082526080820190925260609160009190816020015b61114860405180606001604052806060815260200160608152602001606081525090565b81526020019060019003908161112457905050905060405180606001604052806040518060400160405280601181526020017026b4ba343930b2bab6902bb0b93934b7b960791b81525081526020016040518060400160405280600881526020016736aba0a92924a7a960c11b8152508152602001604051806040016040528060078152602001662ba0a92924a7a960c91b815250815250816000815181106111f3576111f361232a565b602002602001018190525060405180606001604052806040518060400160405280601081526020016f26b4ba343930b2bab69020b931b432b960811b81525081526020016040518060400160405280600781526020016636a0a921a422a960c91b81525081526020016040518060400160405280600681526020016520a921a422a960d11b815250815250816001815181106112915761129161232a565b602002602001018190525060405180606001604052806040518060400160405280601281526020017126b4ba343930b2bab6902437b939b2b6b0b760711b81525081526020016040518060400160405280600981526020016836a427a929a2a6a0a760b91b8152508152602001604051806040016040528060088152602001672427a929a2a6a0a760c11b815250815250816002815181106108255761082561232a565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c381016113965750670de0b6b3a764000092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be81016113e95750670de0b6b3a764000092915050565b6040805180820190915260038152624f524560e81b6020909101527f624ae31110c92d70b58ec456bb42524ff16773a98936d8ef150f1e6b104b34ab810161143b5750670de0b6b3a764000092915050565b6040805180820190915260068152652ba2a0a827a760d11b6020909101527fbbbd9ae5a4e104776c954879199abf8e14ebd8b157cc822605c7a65f61d37d648101610c865750670de0b6b3a764000092915050565b60006114ae670de0b6b3a764000069021e19e0c9bab2400000612340565b905090565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c3810161150d5750600092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be81016115595750600192915050565b6040805180820190915260038152624f524560e81b6020909101527f624ae31110c92d70b58ec456bb42524ff16773a98936d8ef150f1e6b104b34ab81016115a45750600292915050565b6040805180820190915260068152652ba2a0a827a760d11b6020909101527fbbbd9ae5a4e104776c954879199abf8e14ebd8b157cc822605c7a65f61d37d6481016115f25750600392915050565b50600092915050565b6000546201000090046001600160a01b0316331461164f5760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b60448201526064016106e7565b8060048484604051611662929190612362565b9081526040805160209281900383019020835181559183015160018301558201516002820155606082015160038201556080820151600482015560a0820151600582015560c090910151600690910155505050565b600054610100900460ff16158080156116d75750600054600160ff909116105b806116f15750303b1580156116f1575060005460ff166001145b6117545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106e7565b6000805460ff191660011790558015611777576000805461ff0019166101001790555b6000805475ffffffffffffffffffffffffffffffffffffffff000019163362010000021790556005839055600682905580156117ed576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60408051600480825260a0820190925260609160009190816020015b606081526020019060019003908161180e579050509050604051806040016040528060048152602001631193d3d160e21b815250816000815181106118555761185561232a565b60200260200101819052506040518060400160405280600481526020016315d3d3d160e21b815250816001815181106118905761189061232a565b6020026020010181905250604051806040016040528060038152602001624f524560e81b815250816002815181106118ca576118ca61232a565b6020026020010181905250604051806040016040528060068152602001652ba2a0a827a760d11b815250816003815181106108255761082561232a565b60408051600580825260c0820190925260609160009190816020015b6060815260200190600190039081611923579050509050604051806040016040528060048152602001634641524d60e01b8152508160008151811061196a5761196a61232a565b60200260200101819052506040518060400160405280600a8152602001691315535091549352531360b21b815250816001815181106119ab576119ab61232a565b6020026020010181905250604051806040016040528060048152602001634d494e4560e01b815250816002815181106119e6576119e661232a565b602002602001018190525060405180604001604052806006815260200165534d4954485960d01b81525081600381518110611a2357611a2361232a565b6020026020010181905250604051806040016040528060048152602001631193d49560e21b815250816004815181106108255761082561232a565b80516020808301919091206040805180820190915260048152634641524d60e01b9201919091526000907fea182adbe8a99c0376d68ae8663b1e572fb013df4142853d0efacd6d83e4a3f38101611abf57506706f05b59d3b2000092915050565b60408051808201909152600a8152691315535091549352531360b21b6020909101527f9105c25cd4a4f5de306390a4361214e261c5b47733a14849b60e1afd6befe9a78101611b1857506704db73254763000092915050565b6040805180820190915260048152634d494e4560e01b6020909101527fba703fbcaf9339015e918255c7c6fb66106877b9277228701a99875362186bbc8101611b6b57506703782dace9d9000092915050565b604080518082019091526006815265534d4954485960d01b6020909101527f172dd3f67874f5199aae0df823a0dbc7dc361e67643d2a2054a704e56cc7902e8101611bc057506702c68af0bb14000092915050565b6040805180820190915260048152631193d49560e21b6020909101527fd6ee2a35c7750db1280c6e5b14dbb9643f0276ca328c44ef8a35818fd5bd14e78101610e7657506702c68af0bb14000092915050565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b92019190915260009081907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f8101611c825750662386eaaf21062593662386f26fc100009350915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c08101611ce05750662386ec6c5bd11693662386f26fc100009350915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610fc15750662386ee0e96833693662386f26fc100009350915050565b6000546201000090046001600160a01b03163314611d945760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b60448201526064016106e7565b80600360008585604051602001611dac929190612372565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050565b80356001600160a01b0381168114611e1057600080fd5b919050565b60008060408385031215611e2857600080fd5b82359150611e3860208401611df9565b90509250929050565b60005b83811015611e5c578181015183820152602001611e44565b50506000910152565b60008151808452611e7d816020860160208601611e41565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ee657603f19888603018452611ed4858351611e65565b94509285019290850190600101611eb8565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611f5b57888303603f1901855281518051878552611f3e88860182611e65565b918901519489019490945294870194925090860190600101611f1a565b509098975050505050505050565b6000815160608452611f7e6060850182611e65565b905060208301518482036020860152611f978282611e65565b91505060408301518482036040860152611fb18282611e65565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ee657603f19888603018452611ffd858351611f69565b94509285019290850190600101611fe1565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156120485761204861200f565b60405290565b600082601f83011261205f57600080fd5b813567ffffffffffffffff8082111561207a5761207a61200f565b604051601f8301601f19908116603f011681019082821181831017156120a2576120a261200f565b816040528381528660208588010111156120bb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156120ed57600080fd5b813567ffffffffffffffff81111561210457600080fd5b6121108482850161204e565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ee657603f1988860301845261215b858351611f69565b9450928501929085019060010161213f565b60006020828403121561217f57600080fd5b5035919050565b600080600083850361010081121561219d57600080fd5b843567ffffffffffffffff808211156121b557600080fd5b818701915087601f8301126121c957600080fd5b8135818111156121d857600080fd5b8860208285010111156121ea57600080fd5b60209290920195509093505060e0601f198201121561220857600080fd5b50612211612025565b6020850135815260408501356020820152606085013560408201526080850135606082015260a0850135608082015260c085013560a082015260e085013560c0820152809150509250925092565b6000806040838503121561227257600080fd5b50508035926020909101359150565b6020815260006122946020830184611e65565b9392505050565b6000602082840312156122ad57600080fd5b61229482611df9565b6000806000606084860312156122cb57600080fd5b833567ffffffffffffffff808211156122e357600080fd5b6122ef8783880161204e565b9450602086013591508082111561230557600080fd5b506123128682870161204e565b92505061232160408501611df9565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b60008261235d57634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b60008351612384818460208801611e41565b835190830190612398818360208801611e41565b0194935050505056fea26469706673582212207b761636c8d5c24ff5766922f750e1fa0f19addb6bffc5fb69f77a45ab965ee164736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102cf5760003560e01c806377641f071161018c578063c7388af4116100ee578063f515741311610097578063fcc77f3b11610071578063fcc77f3b14610672578063fe9135f014610685578063ff614f4f1461068e57600080fd5b8063f515741314610631578063f57333f71461063a578063f8c73bd31461064a57600080fd5b8063dc488ad6116100c8578063dc488ad6146105eb578063dd77e3c71461060e578063e7cb9a871461062157600080fd5b8063c7388af41461054d578063cf0c501714610555578063d9cf6a26146105e357600080fd5b8063a5843f0811610150578063b5b41bb61161012a578063b5b41bb614610533578063beaa602d1461053c578063c1cc57b01461054557600080fd5b8063a5843f08146104f0578063a6896cdb14610503578063b22f0c781461050a57600080fd5b806377641f07146104b2578063781e0efe146104c55780637f0c0b7d146104cd578063a0184996146104e0578063a53a3bb7146104e757600080fd5b8063355bb529116102355780635b33550a116101f957806368e35ca0116101d357806368e35ca0146103cf578063699324ae1461047b5780636f3426da146104a457600080fd5b80635b33550a1461043c578063636d68541461044f578063657f17fd1461047357600080fd5b8063355bb529146103cf5780634161d4ec146103dd578063426851b9146103f0578063493d458f1461040557806350b345b51461041357600080fd5b80631547440811610297578063265d3f5011610271578063265d3f5014610378578063267a02bf1461038b578063271530501461039e57600080fd5b806315474408146103425780631dae215214610350578063253a1eac1461036557600080fd5b8063023da674146102d4578063027aa9f5146102e9578063051d8db61461030757806309f04f1c1461031f5780631245cbee1461032d575b600080fd5b6102e76102e2366004611e15565b610697565b005b6102f1610743565b6040516102fe9190611e91565b60405180910390f35b674563918244f400005b6040519081526020016102fe565b6703782dace9d90000610311565b610335610835565b6040516102fe9190611ef3565b670a688906bd8b0000610311565b61035861087e565b6040516102fe9190611fba565b6103116103733660046120db565b610b2b565b6103116103863660046120db565b610cc1565b6103116103993660046120db565b610eb1565b6000546103b7906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016102fe565b670429d069189e0000610311565b6103116103eb3660046120db565b610ff8565b6103f8611108565b6040516102fe9190612118565b670853a0d2313c0000610311565b6103b761042136600461216d565b6002602052600090815260409020546001600160a01b031681565b61031161044a3660046120db565b611335565b61046361045d3660046120db565b50600090565b60405190151581526020016102fe565b610311611490565b6103b761048936600461216d565b6003602052600090815260409020546001600160a01b031681565b670c7d713b49da0000610311565b6103116104c03660046120db565b6114b3565b600554610311565b6102e76104db366004612186565b6115fb565b6028610311565b62127500610311565b6102e76104fe36600461225f565b6116b7565b6001610311565b60408051808201825260078152662ba0a92924a7a960c91b602082015290516102fe9190612281565b6202a300610311565b61031160055481565b6102f16117f2565b600654610311565b6105ae6105633660046120db565b80516020818301810180516004808352938301929094019190912092905281546001830154600284015460038501549385015460058601546006909601549395929491939192909187565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e0016102fe565b6102f1611907565b6104636105f936600461229b565b60016020526000908152604090205460ff1681565b61031161061c3660046120db565b611a5e565b69010f0cf064dd59200000610311565b620d2f00610311565b69021e19e0c9bab2400000610311565b61065d6106583660046120db565b611c13565b604080519283526020830191909152016102fe565b6102e76106803660046122b6565b611d40565b62015180610311565b61031160065481565b6000546201000090046001600160a01b031633146106f05760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b60448201526064015b60405180910390fd5b600091825260026020908152604080842080546001600160a01b0390941673ffffffffffffffffffffffffffffffffffffffff19909416841790559183526001908190529120805460ff19169091179055565b6040805160038082526080820190925260609160009190816020015b606081526020019060019003908161075f579050509050604051806040016040528060078152602001662ba0a92924a7a960c91b815250816000815181106107a9576107a961232a565b60200260200101819052506040518060400160405280600681526020016520a921a422a960d11b815250816001815181106107e6576107e661232a565b6020026020010181905250604051806040016040528060088152602001672427a929a2a6a0a760c11b815250816002815181106108255761082561232a565b6020908102919091010152919050565b604080516000808252602082019092526060919081610877565b60408051808201909152606081526000602082015281526020019060019003908161084f5790505b5092915050565b60408051600480825260a0820190925260609160009190816020015b6108be60405180606001604052806060815260200160608152602001606081525090565b81526020019060019003908161089a57905050905060405180606001604052806040518060400160405280600e81526020016d135a5d1a1c98595d5b48119bdbd960921b8152508152602001604051806040016040528060058152602001641b5193d3d160da1b8152508152602001604051806040016040528060048152602001631193d3d160e21b815250815250816000815181106109605761096061232a565b602002602001018190525060405180606001604052806040518060400160405280600e81526020016d135a5d1a1c98595d5b4815dbdbd960921b8152508152602001604051806040016040528060058152602001641b55d3d3d160da1b81525081526020016040518060400160405280600481526020016315d3d3d160e21b815250815250816001815181106109f8576109f861232a565b602002602001018190525060405180606001604052806040518060400160405280600d81526020016c4d697468726165756d204f726560981b8152508152602001604051806040016040528060048152602001636d4f524560e01b8152508152602001604051806040016040528060038152602001624f524560e81b81525081525081600281518110610a8d57610a8d61232a565b602002602001018190525060405180606001604052806040518060400160405280601081526020016f26b4ba343930b2bab6902bb2b0b837b760811b81525081526020016040518060400160405280600781526020016636aba2a0a827a760c91b8152508152602001604051806040016040528060068152602001652ba2a0a827a760d11b815250815250816003815181106108255761082561232a565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c38101610b8c5750670de0b6b3a764000092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be8101610bdf5750671bc16d674ec8000092915050565b6040805180820190915260038152624f524560e81b6020909101527f624ae31110c92d70b58ec456bb42524ff16773a98936d8ef150f1e6b104b34ab8101610c315750673782dace9d90000092915050565b6040805180820190915260068152652ba2a0a827a760d11b6020909101527fbbbd9ae5a4e104776c954879199abf8e14ebd8b157cc822605c7a65f61d37d648101610c865750676f05b59d3b20000092915050565b60405162461bcd60e51b815260206004820152601060248201526f756e6b6e6f776e207265736f7572636560801b60448201526064016106e7565b80516020808301919091206040805180820190915260048152634641524d60e01b9201919091526000907fea182adbe8a99c0376d68ae8663b1e572fb013df4142853d0efacd6d83e4a3f38101610d225750678ac7230489e8000092915050565b60408051808201909152600a8152691315535091549352531360b21b6020909101527f9105c25cd4a4f5de306390a4361214e261c5b47733a14849b60e1afd6befe9a78101610d7b5750676124fee993bc000092915050565b6040805180820190915260048152634d494e4560e01b6020909101527fba703fbcaf9339015e918255c7c6fb66106877b9277228701a99875362186bbc8101610dce5750674563918244f4000092915050565b604080518082019091526006815265534d4954485960d01b6020909101527f172dd3f67874f5199aae0df823a0dbc7dc361e67643d2a2054a704e56cc7902e8101610e2357506729a2241af62c000092915050565b6040805180820190915260048152631193d49560e21b6020909101527fd6ee2a35c7750db1280c6e5b14dbb9643f0276ca328c44ef8a35818fd5bd14e78101610e765750674563918244f4000092915050565b60405162461bcd60e51b815260206004820152601060248201526f756e6b6e6f776e206275696c64696e6760801b60448201526064016106e7565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b9201919091526000907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f8101610f155750670de0b6b3a764000092915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c08101610f6a57506703782dace9d9000092915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610fc1575067016345785d8a000092915050565b60405162461bcd60e51b815260206004820152600c60248201526b1d5b9adb9bdddb881d5b9a5d60a21b60448201526064016106e7565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b9201919091526000907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f810161105c5750671bc16d674ec8000092915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c081016110b157506729a2241af62c000092915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610fc15750673782dace9d90000092915050565b6040805160038082526080820190925260609160009190816020015b61114860405180606001604052806060815260200160608152602001606081525090565b81526020019060019003908161112457905050905060405180606001604052806040518060400160405280601181526020017026b4ba343930b2bab6902bb0b93934b7b960791b81525081526020016040518060400160405280600881526020016736aba0a92924a7a960c11b8152508152602001604051806040016040528060078152602001662ba0a92924a7a960c91b815250815250816000815181106111f3576111f361232a565b602002602001018190525060405180606001604052806040518060400160405280601081526020016f26b4ba343930b2bab69020b931b432b960811b81525081526020016040518060400160405280600781526020016636a0a921a422a960c91b81525081526020016040518060400160405280600681526020016520a921a422a960d11b815250815250816001815181106112915761129161232a565b602002602001018190525060405180606001604052806040518060400160405280601281526020017126b4ba343930b2bab6902437b939b2b6b0b760711b81525081526020016040518060400160405280600981526020016836a427a929a2a6a0a760b91b8152508152602001604051806040016040528060088152602001672427a929a2a6a0a760c11b815250815250816002815181106108255761082561232a565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c381016113965750670de0b6b3a764000092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be81016113e95750670de0b6b3a764000092915050565b6040805180820190915260038152624f524560e81b6020909101527f624ae31110c92d70b58ec456bb42524ff16773a98936d8ef150f1e6b104b34ab810161143b5750670de0b6b3a764000092915050565b6040805180820190915260068152652ba2a0a827a760d11b6020909101527fbbbd9ae5a4e104776c954879199abf8e14ebd8b157cc822605c7a65f61d37d648101610c865750670de0b6b3a764000092915050565b60006114ae670de0b6b3a764000069021e19e0c9bab2400000612340565b905090565b80516020808301919091206040805180820190915260048152631193d3d160e21b9201919091526000907fd090a5d9e290baeb3c0f657cb8df01a7c37d0d11b8a73165ba04298bd71606c3810161150d5750600092915050565b60408051808201909152600481526315d3d3d160e21b6020909101527fa0c2c402a49ee67eb7d8a3e87eb93de113a3a54817e8a70c39ae8ab51c0e12be81016115595750600192915050565b6040805180820190915260038152624f524560e81b6020909101527f624ae31110c92d70b58ec456bb42524ff16773a98936d8ef150f1e6b104b34ab81016115a45750600292915050565b6040805180820190915260068152652ba2a0a827a760d11b6020909101527fbbbd9ae5a4e104776c954879199abf8e14ebd8b157cc822605c7a65f61d37d6481016115f25750600392915050565b50600092915050565b6000546201000090046001600160a01b0316331461164f5760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b60448201526064016106e7565b8060048484604051611662929190612362565b9081526040805160209281900383019020835181559183015160018301558201516002820155606082015160038201556080820151600482015560a0820151600582015560c090910151600690910155505050565b600054610100900460ff16158080156116d75750600054600160ff909116105b806116f15750303b1580156116f1575060005460ff166001145b6117545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106e7565b6000805460ff191660011790558015611777576000805461ff0019166101001790555b6000805475ffffffffffffffffffffffffffffffffffffffff000019163362010000021790556005839055600682905580156117ed576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60408051600480825260a0820190925260609160009190816020015b606081526020019060019003908161180e579050509050604051806040016040528060048152602001631193d3d160e21b815250816000815181106118555761185561232a565b60200260200101819052506040518060400160405280600481526020016315d3d3d160e21b815250816001815181106118905761189061232a565b6020026020010181905250604051806040016040528060038152602001624f524560e81b815250816002815181106118ca576118ca61232a565b6020026020010181905250604051806040016040528060068152602001652ba2a0a827a760d11b815250816003815181106108255761082561232a565b60408051600580825260c0820190925260609160009190816020015b6060815260200190600190039081611923579050509050604051806040016040528060048152602001634641524d60e01b8152508160008151811061196a5761196a61232a565b60200260200101819052506040518060400160405280600a8152602001691315535091549352531360b21b815250816001815181106119ab576119ab61232a565b6020026020010181905250604051806040016040528060048152602001634d494e4560e01b815250816002815181106119e6576119e661232a565b602002602001018190525060405180604001604052806006815260200165534d4954485960d01b81525081600381518110611a2357611a2361232a565b6020026020010181905250604051806040016040528060048152602001631193d49560e21b815250816004815181106108255761082561232a565b80516020808301919091206040805180820190915260048152634641524d60e01b9201919091526000907fea182adbe8a99c0376d68ae8663b1e572fb013df4142853d0efacd6d83e4a3f38101611abf57506706f05b59d3b2000092915050565b60408051808201909152600a8152691315535091549352531360b21b6020909101527f9105c25cd4a4f5de306390a4361214e261c5b47733a14849b60e1afd6befe9a78101611b1857506704db73254763000092915050565b6040805180820190915260048152634d494e4560e01b6020909101527fba703fbcaf9339015e918255c7c6fb66106877b9277228701a99875362186bbc8101611b6b57506703782dace9d9000092915050565b604080518082019091526006815265534d4954485960d01b6020909101527f172dd3f67874f5199aae0df823a0dbc7dc361e67643d2a2054a704e56cc7902e8101611bc057506702c68af0bb14000092915050565b6040805180820190915260048152631193d49560e21b6020909101527fd6ee2a35c7750db1280c6e5b14dbb9643f0276ca328c44ef8a35818fd5bd14e78101610e7657506702c68af0bb14000092915050565b80516020808301919091206040805180820190915260078152662ba0a92924a7a960c91b92019190915260009081907f963ace81a31bb0e5e04a9395a1006fbdeb19cac259cef54f594aee1106583c6f8101611c825750662386eaaf21062593662386f26fc100009350915050565b60408051808201909152600681526520a921a422a960d11b6020909101527fbd21a0403f8a882c166bd206a22b19e35435476f82a2cccdbfebf4d666c861c08101611ce05750662386ec6c5bd11693662386f26fc100009350915050565b6040805180820190915260088152672427a929a2a6a0a760c11b6020909101527f762a1190b034cd04c3eae43da1943cdf0137d457634c4d62e69626f81f1986c78101610fc15750662386ee0e96833693662386f26fc100009350915050565b6000546201000090046001600160a01b03163314611d945760405162461bcd60e51b815260206004820152601160248201527037b7363ca6b4b3b43a3ca1b932b0ba37b960791b60448201526064016106e7565b80600360008585604051602001611dac929190612372565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050565b80356001600160a01b0381168114611e1057600080fd5b919050565b60008060408385031215611e2857600080fd5b82359150611e3860208401611df9565b90509250929050565b60005b83811015611e5c578181015183820152602001611e44565b50506000910152565b60008151808452611e7d816020860160208601611e41565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ee657603f19888603018452611ed4858351611e65565b94509285019290850190600101611eb8565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015611f5b57888303603f1901855281518051878552611f3e88860182611e65565b918901519489019490945294870194925090860190600101611f1a565b509098975050505050505050565b6000815160608452611f7e6060850182611e65565b905060208301518482036020860152611f978282611e65565b91505060408301518482036040860152611fb18282611e65565b95945050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ee657603f19888603018452611ffd858351611f69565b94509285019290850190600101611fe1565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff811182821017156120485761204861200f565b60405290565b600082601f83011261205f57600080fd5b813567ffffffffffffffff8082111561207a5761207a61200f565b604051601f8301601f19908116603f011681019082821181831017156120a2576120a261200f565b816040528381528660208588010111156120bb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156120ed57600080fd5b813567ffffffffffffffff81111561210457600080fd5b6121108482850161204e565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611ee657603f1988860301845261215b858351611f69565b9450928501929085019060010161213f565b60006020828403121561217f57600080fd5b5035919050565b600080600083850361010081121561219d57600080fd5b843567ffffffffffffffff808211156121b557600080fd5b818701915087601f8301126121c957600080fd5b8135818111156121d857600080fd5b8860208285010111156121ea57600080fd5b60209290920195509093505060e0601f198201121561220857600080fd5b50612211612025565b6020850135815260408501356020820152606085013560408201526080850135606082015260a0850135608082015260c085013560a082015260e085013560c0820152809150509250925092565b6000806040838503121561227257600080fd5b50508035926020909101359150565b6020815260006122946020830184611e65565b9392505050565b6000602082840312156122ad57600080fd5b61229482611df9565b6000806000606084860312156122cb57600080fd5b833567ffffffffffffffff808211156122e357600080fd5b6122ef8783880161204e565b9450602086013591508082111561230557600080fd5b506123128682870161204e565b92505061232160408501611df9565b90509250925092565b634e487b7160e01b600052603260045260246000fd5b60008261235d57634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b60008351612384818460208801611e41565b835190830190612398818360208801611e41565b0194935050505056fea26469706673582212207b761636c8d5c24ff5766922f750e1fa0f19addb6bffc5fb69f77a45ab965ee164736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getBaseBattleDuration()": {
        "details": "Used internally to determine how long battle will last",
        "returns": {
          "_0": "Base battle duration"
        }
      },
      "getBasicProductionBuildingCoefficient(string)": {
        "details": "used for internal calculation of production result",
        "params": {
          "buildingName": "Building type"
        },
        "returns": {
          "_0": "Basic production building coefficient"
        }
      },
      "getBattleDurationStunMultiplier()": {
        "details": "Used internally to determine how long stun will last after army lost battle",
        "returns": {
          "_0": "Battle duration stun multiplier"
        }
      },
      "getBattleLobbyDurationPercent()": {
        "details": "Used internally to determine how long lobby phase will last",
        "returns": {
          "_0": "Battle lobby phase duration percent"
        }
      },
      "getBuildingTokenTransferThresholdPercent()": {
        "details": "Used to determine is building token transfer allowed based on treasury percent",
        "returns": {
          "_0": "Building token transfer threshold percent"
        }
      },
      "getBuildings()": {
        "details": "Used internally to determine which buildings will be created on placing settlement",
        "returns": {
          "_0": "Buildings"
        }
      },
      "getCultistUnitType()": {
        "details": "Determines type of unit in cultists army",
        "returns": {
          "_0": "Cultists unit type"
        }
      },
      "getCultistsNoDestructionDelay()": {
        "details": "Used to determine if destruction is available or not",
        "returns": {
          "_0": "No destruction interval duration (in seconds)"
        }
      },
      "getCultistsPerZoneMultiplier()": {
        "details": "Used to determine amount of cultists that have to be present for world destruction",
        "returns": {
          "_0": "Value of cultists per zone"
        }
      },
      "getCultistsSummonDelay()": {
        "details": "Used to determine is cultists can be re-summoned",
        "returns": {
          "_0": "Cultists summon delay (in seconds)"
        }
      },
      "getDemilitarizationCooldown()": {
        "details": "Used for army demilitarization restriction",
        "returns": {
          "_0": "Demilitarization cooldown in seconds"
        }
      },
      "getGameResources()": {
        "details": "Used internally to determine upgrade costs and providing initial resources for settlement owner based on his tier",
        "params": {
          "resources": "Game resources"
        }
      },
      "getGameUnits()": {
        "details": "Used internally in many places where interaction with units is necessary",
        "returns": {
          "_0": "Game units"
        }
      },
      "getGlobalMultiplier()": {
        "details": "Used everywhere, where time is involved. Essentially determines game speed",
        "returns": {
          "_0": "Global multiplier"
        }
      },
      "getMaxCultistsPerZone()": {
        "details": "Used to determine how many cultists will be summoned",
        "returns": {
          "_0": "Maximum amount of cultists"
        }
      },
      "getMaxSettlementPerZone()": {
        "details": "Cultists does not count (so +1 with cultists)",
        "returns": {
          "_0": "Max settlement that can be placed in one zone"
        }
      },
      "getMovementDurationStunMultiplier()": {
        "details": "Used internally to determine how long stun will last after armies' movement",
        "returns": {
          "_0": "Movement duration stun multiplier"
        }
      },
      "getNewSettlementExtraResources()": {
        "details": "During settlement creation continent contract uses output from this function to determine how much extra resources to mint",
        "returns": {
          "_0": "Extra resources which will be minted to user when new settlement is placed"
        }
      },
      "getNewSettlementStartingPrice()": {
        "details": "Used to determine how much base price for first settlement will be",
        "returns": {
          "_0": "New settlement starting price"
        }
      },
      "getProductionTicksInSecond()": {
        "details": "Used for production calculation",
        "returns": {
          "_0": "Amount of production ticks"
        }
      },
      "getProsperityForDemilitarization(string)": {
        "details": "Used internally to calculate how much prosperity will be given",
        "returns": {
          "_0": "Prosperity amount per one unit (in 1e18 precision)"
        }
      },
      "getResourceWeight(string)": {
        "details": "Used for calculation how much prosperity will be produced by resource in treasury",
        "params": {
          "resourceName": "Resource name"
        },
        "returns": {
          "_0": "Resource weight (in 1e0 precision)"
        }
      },
      "getResources()": {
        "details": "Used internally to determine upgrade costs and providing initial resources for settlement owner based on his tier",
        "params": {
          "resources": "Game resources"
        }
      },
      "getRobberyFee()": {
        "details": "Used in determination how much of resource will be burned during robbery",
        "returns": {
          "_0": "Robbery fee (in 1e18 precision, where 1e18 is 100%)"
        }
      },
      "getSiegePointsToResourceMultiplier(string)": {
        "details": "Used in calculation how many resources can be exchanged for siege points",
        "params": {
          "resourceName": "Resource name"
        },
        "returns": {
          "_0": "Siege point multiplier (in 1e18 precision)"
        }
      },
      "getSiegePowerToSiegePointsMultiplier()": {
        "details": "Used for determination how much siege points will be given",
        "returns": {
          "_0": "Siege power to siege siege points multiplier (in 1e18 precision)"
        }
      },
      "getToTreasuryPercent()": {
        "details": "Determines how much of buildings production will go to treasury (if not full)",
        "params": {
          "toTreasuryPercent": "Production to treasury percent (in 1e18 precision, where 1e18 is 100%)"
        }
      },
      "getToxicityByResource(string)": {
        "details": "Used for minting/burning toxicity",
        "params": {
          "resourceName": "Resource name"
        },
        "returns": {
          "_0": "Amount of toxicity per 1 resource (both are in 1e18 precision)"
        }
      },
      "getUnitHiringFortHpMultiplier()": {
        "details": "Used to determine how much units in army can be presented based on its current fort hp and this parameter",
        "returns": {
          "_0": "Unit hiring fort hp multiplier"
        }
      },
      "getUnitMaxFoodToSpendOnMove(string)": {
        "details": "Used internally to calculate army's movement speed",
        "params": {
          "unitType": "Unit type"
        },
        "returns": {
          "_0": "Maximum amount of food to spend on move (in 1e18 precision)"
        }
      },
      "getUnitPriceDropByUnitType(string)": {
        "details": "Used for determination of current unit pool price",
        "params": {
          "unitType": "Unit type"
        },
        "returns": {
          "_0": "Numerator",
          "_1": "Denominator"
        }
      },
      "getUnits()": {
        "details": "Used internally in many places where interaction with units is necessary",
        "returns": {
          "_0": "Game units"
        }
      },
      "getWorkerCapacityCoefficient(string)": {
        "details": "Used for internal calculation of max workers for each building",
        "params": {
          "buildingName": "Building type"
        },
        "returns": {
          "_0": "Worker capacity coefficient"
        }
      },
      "hasStartingTreasury(string)": {
        "details": "Used for determination if treasury should be filled on settlement creation",
        "params": {
          "buildingName": "Building type"
        },
        "returns": {
          "_0": "If treasury should be filled"
        }
      },
      "init(uint256,uint256)": {
        "details": "Called by address which created current instance",
        "params": {
          "globalMultiplier": "Global multiplier",
          "settlementStartingPrice": "Settlement starting price"
        }
      },
      "setFactoryContract(bytes32,address)": {
        "details": "Even though function is opened, it can be called only by mightyCreator",
        "params": {
          "assetType": "Type of the asset",
          "factoryAddress": "Factory address"
        }
      },
      "setScriptContractName(string,string,address)": {
        "details": "Even though function is opened, it can be called only by mightyCreator",
        "params": {
          "assetGroup": "Asset group",
          "assetType": "Type of the asset",
          "implementationAddress": "Implementation address"
        }
      },
      "setUnitStats(string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
        "details": "Even though function is opened, it can be called only by mightyCreator",
        "params": {
          "unitName": "Unit type",
          "unitStats": "Unit stats struct"
        }
      }
    },
    "stateVariables": {
      "factoryContracts": {
        "details": "Updated when #setFactoryContract is calledDuring new world asset creation process registry is asked for factory contract for exact world asset type, which will contain creation method for new world asset"
      },
      "globalMultiplier": {
        "details": "Immutable, initialized on the registry creation"
      },
      "isFactoryContract": {
        "details": "Updated when #setFactoryContract is called"
      },
      "mightyCreator": {
        "details": "Immutable, initialized on the registry creation"
      },
      "scriptContracts": {
        "details": "Updated when #setScriptContractName is calledEvery worlds assets implementation (code, not data) will be defined by value from this mapping"
      },
      "settlementStartingPrice": {
        "details": "Immutable, initialized on the registry creation"
      },
      "unitsStats": {
        "details": "Updated when #setUnitStats is called"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "factoryContracts(bytes32)": {
        "notice": "Mapping containing factory contracts addresses by provided asset types"
      },
      "getBaseBattleDuration()": {
        "notice": "Returns base battle duration"
      },
      "getBasicProductionBuildingCoefficient(string)": {
        "notice": "Calculates basic production building coefficient"
      },
      "getBattleDurationStunMultiplier()": {
        "notice": "Returns battle duration stun multiplier"
      },
      "getBattleLobbyDurationPercent()": {
        "notice": "Returns battle lobby phase duration percent (in 1e18 precision)"
      },
      "getBuildingTokenTransferThresholdPercent()": {
        "notice": "Returns building token transfer threshold percent"
      },
      "getBuildings()": {
        "notice": "Returns game buildings"
      },
      "getCultistUnitType()": {
        "notice": "Returns unit type of cultists army"
      },
      "getCultistsNoDestructionDelay()": {
        "notice": "Returns interval duration where world is not destructible after recent cultists summon"
      },
      "getCultistsPerZoneMultiplier()": {
        "notice": "Returns value of cultists per zone which determines cultists threshold for world destruction"
      },
      "getCultistsSummonDelay()": {
        "notice": "Returns cultists summon delay"
      },
      "getDemilitarizationCooldown()": {
        "notice": "Returns army demilitarization cooldown in seconds"
      },
      "getGameResources()": {
        "notice": "Returns game resources"
      },
      "getGameUnits()": {
        "notice": "Returns game units"
      },
      "getGlobalMultiplier()": {
        "notice": "Returns global multiplier"
      },
      "getMaxCultistsPerZone()": {
        "notice": "Returns maximum amount of cultists that can be present in zone"
      },
      "getMaxSettlementPerZone()": {
        "notice": "Returns max settlement that can be placed in one zone"
      },
      "getMovementDurationStunMultiplier()": {
        "notice": "Returns movement duration stun multiplier"
      },
      "getNewSettlementExtraResources()": {
        "notice": "Returns extra resources which will be minted to user when new settlement is placed"
      },
      "getNewSettlementStartingPrice()": {
        "notice": "Returns new settlement starting price in settlements market"
      },
      "getProductionTicksInSecond()": {
        "notice": "Returns amount of production ticks"
      },
      "getProsperityForDemilitarization(string)": {
        "notice": "Returns how much prosperity will be given for provided unit type"
      },
      "getResourceWeight(string)": {
        "notice": "Calculates resource weight"
      },
      "getResources()": {
        "notice": "Returns game resources"
      },
      "getRobberyFee()": {
        "notice": "Returns robbery fee"
      },
      "getSiegePointsToResourceMultiplier(string)": {
        "notice": "Returns siege point multiplier by provided resource"
      },
      "getSiegePowerToSiegePointsMultiplier()": {
        "notice": "Returns siege power to siege siege points multiplier"
      },
      "getToTreasuryPercent()": {
        "notice": "Returns production to treasury percent"
      },
      "getToxicityByResource(string)": {
        "notice": "Calculates toxicity by resource ratio"
      },
      "getUnitHiringFortHpMultiplier()": {
        "notice": "Returns unit hiring fort hp multiplier"
      },
      "getUnitMaxFoodToSpendOnMove(string)": {
        "notice": "Returns how much food unit can take from treasury to increase its army movement speed"
      },
      "getUnitPriceDropByUnitType(string)": {
        "notice": "Returns unit pool price drop per second for provided unit type, provided as numerator and denominator"
      },
      "getUnits()": {
        "notice": "Returns game units"
      },
      "getWorkerCapacityCoefficient(string)": {
        "notice": "Calculates worker capacity coefficient for provided building type"
      },
      "globalMultiplier()": {
        "notice": "Global multiplier"
      },
      "hasStartingTreasury(string)": {
        "notice": "Calculates if provided building has starting treasury on creation"
      },
      "init(uint256,uint256)": {
        "notice": "Proxy initializer"
      },
      "isFactoryContract(address)": {
        "notice": "Mapping containing is provided address a factory contract or not"
      },
      "mightyCreator()": {
        "notice": "An address which can configure/reconfigure current game"
      },
      "scriptContracts(bytes32)": {
        "notice": "Mapping containing assets implementations addresses by provided asset types"
      },
      "setFactoryContract(bytes32,address)": {
        "notice": "Sets provided address as factory contract for provided asset type"
      },
      "setScriptContractName(string,string,address)": {
        "notice": "Sets provided address as implementation for provided asset group and asset type (for ex. group - \"settlement\", type - \"CULTISTS\")"
      },
      "setUnitStats(string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
        "notice": "Sets units stats for provided unit type"
      },
      "settlementStartingPrice()": {
        "notice": "Settlement starting price"
      },
      "unitsStats(string)": {
        "notice": "Mapping containing units stats by provided unit types"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 119,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 122,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 7618,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "mightyCreator",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7624,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "isFactoryContract",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7630,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "factoryContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 7636,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "scriptContracts",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 7643,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "unitsStats",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_struct(UnitStats)7032_storage)"
      },
      {
        "astId": 7647,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "globalMultiplier",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 7651,
        "contract": "contracts/core/Registry.sol:Registry",
        "label": "settlementStartingPrice",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_struct(UnitStats)7032_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct IRegistry.UnitStats)",
        "numberOfBytes": "32",
        "value": "t_struct(UnitStats)7032_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(UnitStats)7032_storage": {
        "encoding": "inplace",
        "label": "struct IRegistry.UnitStats",
        "members": [
          {
            "astId": 7019,
            "contract": "contracts/core/Registry.sol:Registry",
            "label": "weaponPowerStage1",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7021,
            "contract": "contracts/core/Registry.sol:Registry",
            "label": "armourPowerStage1",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7023,
            "contract": "contracts/core/Registry.sol:Registry",
            "label": "weaponPowerStage2",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7025,
            "contract": "contracts/core/Registry.sol:Registry",
            "label": "armourPowerStage2",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 7027,
            "contract": "contracts/core/Registry.sol:Registry",
            "label": "siegePower",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7029,
            "contract": "contracts/core/Registry.sol:Registry",
            "label": "siegeMaxSupply",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 7031,
            "contract": "contracts/core/Registry.sol:Registry",
            "label": "siegeSupport",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}